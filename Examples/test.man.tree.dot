digraph tree {
	rankdir=HR;
	node [shape=record];
	node0xec86b0 [color=red, label="<left> left | { OPERATOR | func } | <right> right"];
	node0xec8740 [color=green, label="<left> left | { IDENTIFIER | main } | <right> right"];
	node0xec8800 [color=red, label="<left> left | { OPERATOR | void } | <right> right"];
	node0xec8740:left -> node0xec8800;
	node0xec8af0 [color=red, label="<left> left | { OPERATOR | ; } | <right> right"];
	node0xec8910 [color=red, label="<left> left | { OPERATOR | var } | <right> right"];
	node0xec8a10 [color=red, label="<left> left | { OPERATOR | = } | <right> right"];
	node0xec89a0 [color=green, label="<left> left | { IDENTIFIER | num } | <right> right"];
	node0xec8a10:left -> node0xec89a0;
	node0xec8a80 [color=blue, label="<left> left | { NUMBER | 500 } | <right> right"];
	node0xec8a10:right -> node0xec8a80;
	node0xec8910:left -> node0xec8a10;
	node0xec8af0:left -> node0xec8910;
	node0xec8dc0 [color=red, label="<left> left | { OPERATOR | ; } | <right> right"];
	node0xec8cc0 [color=red, label="<left> left | { OPERATOR | call } | <right> right"];
	node0xec8b90 [color=green, label="<left> left | { IDENTIFIER | factorial_recursive } | <right> right"];
	node0xec8cc0:left -> node0xec8b90;
	node0xec8ce0 [color=green, label="<left> left | { IDENTIFIER | num } | <right> right"];
	node0xec8cc0:right -> node0xec8ce0;
	node0xec8dc0:left -> node0xec8cc0;
	node0xec9090 [color=red, label="<left> left | { OPERATOR | ; } | <right> right"];
	node0xec8f90 [color=red, label="<left> left | { OPERATOR | call } | <right> right"];
	node0xec8e60 [color=green, label="<left> left | { IDENTIFIER | factorial_iterative } | <right> right"];
	node0xec8f90:left -> node0xec8e60;
	node0xec8fb0 [color=green, label="<left> left | { IDENTIFIER | num } | <right> right"];
	node0xec8f90:right -> node0xec8fb0;
	node0xec9090:left -> node0xec8f90;
	node0xec91e0 [color=red, label="<left> left | { OPERATOR | ; } | <right> right"];
	node0xec9100 [color=red, label="<left> left | { OPERATOR | ret } | <right> right"];
	node0xec9170 [color=blue, label="<left> left | { NUMBER | 0 } | <right> right"];
	node0xec9100:left -> node0xec9170;
	node0xec91e0:left -> node0xec9100;
	node0xec9090:right -> node0xec91e0;
	node0xec8dc0:right -> node0xec9090;
	node0xec8af0:right -> node0xec8dc0;
	node0xec8740:right -> node0xec8af0;
	node0xec86b0:left -> node0xec8740;
	node0xec92b0 [color=red, label="<left> left | { OPERATOR | func } | <right> right"];
	node0xec9350 [color=green, label="<left> left | { IDENTIFIER | factorial_recursive } | <right> right"];
	node0xec9430 [color=red, label="<left> left | { OPERATOR | var } | <right> right"];
	node0xec94d0 [color=green, label="<left> left | { IDENTIFIER | num } | <right> right"];
	node0xec9430:left -> node0xec94d0;
	node0xec9350:left -> node0xec9430;
	node0xec9ab0 [color=red, label="<left> left | { OPERATOR | ; } | <right> right"];
	node0xec95f0 [color=red, label="<left> left | { OPERATOR | if } | <right> right"];
	node0xec9740 [color=red, label="<left> left | { OPERATOR | \<= } | <right> right"];
	node0xec96d0 [color=green, label="<left> left | { IDENTIFIER | num } | <right> right"];
	node0xec9740:left -> node0xec96d0;
	node0xec97b0 [color=blue, label="<left> left | { NUMBER | 100 } | <right> right"];
	node0xec9740:right -> node0xec97b0;
	node0xec95f0:left -> node0xec9740;
	node0xec99a0 [color=red, label="<left> left | { OPERATOR | ; } | <right> right"];
	node0xec98c0 [color=red, label="<left> left | { OPERATOR | ret } | <right> right"];
	node0xec9930 [color=blue, label="<left> left | { NUMBER | 100 } | <right> right"];
	node0xec98c0:left -> node0xec9930;
	node0xec99a0:left -> node0xec98c0;
	node0xec95f0:right -> node0xec99a0;
	node0xec9ab0:left -> node0xec95f0;
	node0xeca050 [color=red, label="<left> left | { OPERATOR | ; } | <right> right"];
	node0xec9ad0 [color=red, label="<left> left | { OPERATOR | ret } | <right> right"];
	node0xec9c10 [color=red, label="<left> left | { OPERATOR | * } | <right> right"];
	node0xec9b80 [color=green, label="<left> left | { IDENTIFIER | num } | <right> right"];
	node0xec9c10:left -> node0xec9b80;
	node0xec9e10 [color=red, label="<left> left | { OPERATOR | call } | <right> right"];
	node0xec9cc0 [color=green, label="<left> left | { IDENTIFIER | factorial_recursive } | <right> right"];
	node0xec9e10:left -> node0xec9cc0;
	node0xec9ec0 [color=red, label="<left> left | { OPERATOR | - } | <right> right"];
	node0xec9e30 [color=green, label="<left> left | { IDENTIFIER | num } | <right> right"];
	node0xec9ec0:left -> node0xec9e30;
	node0xec9f50 [color=blue, label="<left> left | { NUMBER | 100 } | <right> right"];
	node0xec9ec0:right -> node0xec9f50;
	node0xec9e10:right -> node0xec9ec0;
	node0xec9c10:right -> node0xec9e10;
	node0xec9ad0:left -> node0xec9c10;
	node0xeca050:left -> node0xec9ad0;
	node0xec9ab0:right -> node0xeca050;
	node0xec9350:right -> node0xec9ab0;
	node0xec92b0:left -> node0xec9350;
	node0xeca120 [color=red, label="<left> left | { OPERATOR | func } | <right> right"];
	node0xeca1c0 [color=green, label="<left> left | { IDENTIFIER | factorial_iterative } | <right> right"];
	node0xeca2a0 [color=red, label="<left> left | { OPERATOR | var } | <right> right"];
	node0xeca340 [color=green, label="<left> left | { IDENTIFIER | num } | <right> right"];
	node0xeca2a0:left -> node0xeca340;
	node0xeca1c0:left -> node0xeca2a0;
	node0xeca640 [color=red, label="<left> left | { OPERATOR | ; } | <right> right"];
	node0xeca460 [color=red, label="<left> left | { OPERATOR | var } | <right> right"];
	node0xeca560 [color=red, label="<left> left | { OPERATOR | = } | <right> right"];
	node0xeca4f0 [color=green, label="<left> left | { IDENTIFIER | ans } | <right> right"];
	node0xeca560:left -> node0xeca4f0;
	node0xeca5d0 [color=blue, label="<left> left | { NUMBER | 100 } | <right> right"];
	node0xeca560:right -> node0xeca5d0;
	node0xeca460:left -> node0xeca560;
	node0xeca640:left -> node0xeca460;
	node0xecafe0 [color=red, label="<left> left | { OPERATOR | ; } | <right> right"];
	node0xeca6b0 [color=red, label="<left> left | { OPERATOR | while } | <right> right"];
	node0xeca800 [color=red, label="<left> left | { OPERATOR | \> } | <right> right"];
	node0xeca790 [color=green, label="<left> left | { IDENTIFIER | num } | <right> right"];
	node0xeca800:left -> node0xeca790;
	node0xeca870 [color=blue, label="<left> left | { NUMBER | 100 } | <right> right"];
	node0xeca800:right -> node0xeca870;
	node0xeca6b0:left -> node0xeca800;
	node0xecac10 [color=red, label="<left> left | { OPERATOR | ; } | <right> right"];
	node0xecaa10 [color=red, label="<left> left | { OPERATOR | = } | <right> right"];
	node0xeca9a0 [color=green, label="<left> left | { IDENTIFIER | ans } | <right> right"];
	node0xecaa10:left -> node0xeca9a0;
	node0xecab10 [color=red, label="<left> left | { OPERATOR | * } | <right> right"];
	node0xecaaa0 [color=green, label="<left> left | { IDENTIFIER | ans } | <right> right"];
	node0xecab10:left -> node0xecaaa0;
	node0xecaba0 [color=green, label="<left> left | { IDENTIFIER | num } | <right> right"];
	node0xecab10:right -> node0xecaba0;
	node0xecaa10:right -> node0xecab10;
	node0xecac10:left -> node0xecaa10;
	node0xecaef0 [color=red, label="<left> left | { OPERATOR | ; } | <right> right"];
	node0xecad10 [color=red, label="<left> left | { OPERATOR | = } | <right> right"];
	node0xecaca0 [color=green, label="<left> left | { IDENTIFIER | num } | <right> right"];
	node0xecad10:left -> node0xecaca0;
	node0xecae10 [color=red, label="<left> left | { OPERATOR | - } | <right> right"];
	node0xecada0 [color=green, label="<left> left | { IDENTIFIER | num } | <right> right"];
	node0xecae10:left -> node0xecada0;
	node0xecae80 [color=blue, label="<left> left | { NUMBER | 100 } | <right> right"];
	node0xecae10:right -> node0xecae80;
	node0xecad10:right -> node0xecae10;
	node0xecaef0:left -> node0xecad10;
	node0xecac10:right -> node0xecaef0;
	node0xeca6b0:right -> node0xecac10;
	node0xecafe0:left -> node0xeca6b0;
	node0xecb100 [color=red, label="<left> left | { OPERATOR | ; } | <right> right"];
	node0xecb000 [color=red, label="<left> left | { OPERATOR | ret } | <right> right"];
	node0xecb090 [color=green, label="<left> left | { IDENTIFIER | ans } | <right> right"];
	node0xecb000:left -> node0xecb090;
	node0xecb100:left -> node0xecb000;
	node0xecafe0:right -> node0xecb100;
	node0xeca640:right -> node0xecafe0;
	node0xeca1c0:right -> node0xeca640;
	node0xeca120:left -> node0xeca1c0;
	node0xecb1a0 [color=yellow, label="<left> left | { END | 0 } | <right> right"];
	node0xeca120:right -> node0xecb1a0;
	node0xec92b0:right -> node0xeca120;
	node0xec86b0:right -> node0xec92b0;
}
