digraph tree {
	rankdir=HR;
	node [shape=record];
	node0x162c6b0 [color=red, label="<left> left | { OPERATOR | func } | <right> right"];
	node0x162c740 [color=green, label="<left> left | { IDENTIFIER | main } | <right> right"];
	node0x162c800 [color=red, label="<left> left | { OPERATOR | void } | <right> right"];
	node0x162c740:left -> node0x162c800;
	node0x162caf0 [color=red, label="<left> left | { OPERATOR | ; } | <right> right"];
	node0x162c910 [color=red, label="<left> left | { OPERATOR | var } | <right> right"];
	node0x162ca10 [color=red, label="<left> left | { OPERATOR | = } | <right> right"];
	node0x162c9a0 [color=green, label="<left> left | { IDENTIFIER | num } | <right> right"];
	node0x162ca10:left -> node0x162c9a0;
	node0x162ca80 [color=blue, label="<left> left | { NUMBER | 500 } | <right> right"];
	node0x162ca10:right -> node0x162ca80;
	node0x162c910:left -> node0x162ca10;
	node0x162caf0:left -> node0x162c910;
	node0x162cdc0 [color=red, label="<left> left | { OPERATOR | ; } | <right> right"];
	node0x162ccc0 [color=red, label="<left> left | { OPERATOR | call } | <right> right"];
	node0x162cb90 [color=green, label="<left> left | { IDENTIFIER | factorial_recursive } | <right> right"];
	node0x162ccc0:left -> node0x162cb90;
	node0x162cce0 [color=green, label="<left> left | { IDENTIFIER | num } | <right> right"];
	node0x162ccc0:right -> node0x162cce0;
	node0x162cdc0:left -> node0x162ccc0;
	node0x162d090 [color=red, label="<left> left | { OPERATOR | ; } | <right> right"];
	node0x162cf90 [color=red, label="<left> left | { OPERATOR | call } | <right> right"];
	node0x162ce60 [color=green, label="<left> left | { IDENTIFIER | factorial_iterative } | <right> right"];
	node0x162cf90:left -> node0x162ce60;
	node0x162cfb0 [color=green, label="<left> left | { IDENTIFIER | num } | <right> right"];
	node0x162cf90:right -> node0x162cfb0;
	node0x162d090:left -> node0x162cf90;
	node0x162d1e0 [color=red, label="<left> left | { OPERATOR | ; } | <right> right"];
	node0x162d100 [color=red, label="<left> left | { OPERATOR | ret } | <right> right"];
	node0x162d170 [color=blue, label="<left> left | { NUMBER | 0 } | <right> right"];
	node0x162d100:left -> node0x162d170;
	node0x162d1e0:left -> node0x162d100;
	node0x162d090:right -> node0x162d1e0;
	node0x162cdc0:right -> node0x162d090;
	node0x162caf0:right -> node0x162cdc0;
	node0x162c740:right -> node0x162caf0;
	node0x162c6b0:left -> node0x162c740;
	node0x162d2b0 [color=red, label="<left> left | { OPERATOR | func } | <right> right"];
	node0x162d350 [color=green, label="<left> left | { IDENTIFIER | factorial_recursive } | <right> right"];
	node0x162d430 [color=red, label="<left> left | { OPERATOR | var } | <right> right"];
	node0x162d4d0 [color=green, label="<left> left | { IDENTIFIER | num } | <right> right"];
	node0x162d430:left -> node0x162d4d0;
	node0x162d350:left -> node0x162d430;
	node0x162dab0 [color=red, label="<left> left | { OPERATOR | ; } | <right> right"];
	node0x162d5f0 [color=red, label="<left> left | { OPERATOR | if } | <right> right"];
	node0x162d740 [color=red, label="<left> left | { OPERATOR | \<= } | <right> right"];
	node0x162d6d0 [color=green, label="<left> left | { IDENTIFIER | num } | <right> right"];
	node0x162d740:left -> node0x162d6d0;
	node0x162d7b0 [color=blue, label="<left> left | { NUMBER | 100 } | <right> right"];
	node0x162d740:right -> node0x162d7b0;
	node0x162d5f0:left -> node0x162d740;
	node0x162d9a0 [color=red, label="<left> left | { OPERATOR | ; } | <right> right"];
	node0x162d8c0 [color=red, label="<left> left | { OPERATOR | ret } | <right> right"];
	node0x162d930 [color=blue, label="<left> left | { NUMBER | 100 } | <right> right"];
	node0x162d8c0:left -> node0x162d930;
	node0x162d9a0:left -> node0x162d8c0;
	node0x162d5f0:right -> node0x162d9a0;
	node0x162dab0:left -> node0x162d5f0;
	node0x162e050 [color=red, label="<left> left | { OPERATOR | ; } | <right> right"];
	node0x162dad0 [color=red, label="<left> left | { OPERATOR | ret } | <right> right"];
	node0x162dc10 [color=red, label="<left> left | { OPERATOR | * } | <right> right"];
	node0x162db80 [color=green, label="<left> left | { IDENTIFIER | num } | <right> right"];
	node0x162dc10:left -> node0x162db80;
	node0x162de10 [color=red, label="<left> left | { OPERATOR | call } | <right> right"];
	node0x162dcc0 [color=green, label="<left> left | { IDENTIFIER | factorial_recursive } | <right> right"];
	node0x162de10:left -> node0x162dcc0;
	node0x162dec0 [color=red, label="<left> left | { OPERATOR | - } | <right> right"];
	node0x162de30 [color=green, label="<left> left | { IDENTIFIER | num } | <right> right"];
	node0x162dec0:left -> node0x162de30;
	node0x162df50 [color=blue, label="<left> left | { NUMBER | 100 } | <right> right"];
	node0x162dec0:right -> node0x162df50;
	node0x162de10:right -> node0x162dec0;
	node0x162dc10:right -> node0x162de10;
	node0x162dad0:left -> node0x162dc10;
	node0x162e050:left -> node0x162dad0;
	node0x162dab0:right -> node0x162e050;
	node0x162d350:right -> node0x162dab0;
	node0x162d2b0:left -> node0x162d350;
	node0x162e120 [color=red, label="<left> left | { OPERATOR | func } | <right> right"];
	node0x162e1c0 [color=green, label="<left> left | { IDENTIFIER | factorial_iterative } | <right> right"];
	node0x162e2a0 [color=red, label="<left> left | { OPERATOR | var } | <right> right"];
	node0x162e340 [color=green, label="<left> left | { IDENTIFIER | num } | <right> right"];
	node0x162e2a0:left -> node0x162e340;
	node0x162e1c0:left -> node0x162e2a0;
	node0x162e640 [color=red, label="<left> left | { OPERATOR | ; } | <right> right"];
	node0x162e460 [color=red, label="<left> left | { OPERATOR | var } | <right> right"];
	node0x162e560 [color=red, label="<left> left | { OPERATOR | = } | <right> right"];
	node0x162e4f0 [color=green, label="<left> left | { IDENTIFIER | ans } | <right> right"];
	node0x162e560:left -> node0x162e4f0;
	node0x162e5d0 [color=blue, label="<left> left | { NUMBER | 100 } | <right> right"];
	node0x162e560:right -> node0x162e5d0;
	node0x162e460:left -> node0x162e560;
	node0x162e640:left -> node0x162e460;
	node0x162efe0 [color=red, label="<left> left | { OPERATOR | ; } | <right> right"];
	node0x162e6b0 [color=red, label="<left> left | { OPERATOR | while } | <right> right"];
	node0x162e800 [color=red, label="<left> left | { OPERATOR | \> } | <right> right"];
	node0x162e790 [color=green, label="<left> left | { IDENTIFIER | num } | <right> right"];
	node0x162e800:left -> node0x162e790;
	node0x162e870 [color=blue, label="<left> left | { NUMBER | 100 } | <right> right"];
	node0x162e800:right -> node0x162e870;
	node0x162e6b0:left -> node0x162e800;
	node0x162ec10 [color=red, label="<left> left | { OPERATOR | ; } | <right> right"];
	node0x162ea10 [color=red, label="<left> left | { OPERATOR | = } | <right> right"];
	node0x162e9a0 [color=green, label="<left> left | { IDENTIFIER | ans } | <right> right"];
	node0x162ea10:left -> node0x162e9a0;
	node0x162eb10 [color=red, label="<left> left | { OPERATOR | * } | <right> right"];
	node0x162eaa0 [color=green, label="<left> left | { IDENTIFIER | ans } | <right> right"];
	node0x162eb10:left -> node0x162eaa0;
	node0x162eba0 [color=green, label="<left> left | { IDENTIFIER | num } | <right> right"];
	node0x162eb10:right -> node0x162eba0;
	node0x162ea10:right -> node0x162eb10;
	node0x162ec10:left -> node0x162ea10;
	node0x162eef0 [color=red, label="<left> left | { OPERATOR | ; } | <right> right"];
	node0x162ed10 [color=red, label="<left> left | { OPERATOR | = } | <right> right"];
	node0x162eca0 [color=green, label="<left> left | { IDENTIFIER | num } | <right> right"];
	node0x162ed10:left -> node0x162eca0;
	node0x162ee10 [color=red, label="<left> left | { OPERATOR | - } | <right> right"];
	node0x162eda0 [color=green, label="<left> left | { IDENTIFIER | num } | <right> right"];
	node0x162ee10:left -> node0x162eda0;
	node0x162ee80 [color=blue, label="<left> left | { NUMBER | 100 } | <right> right"];
	node0x162ee10:right -> node0x162ee80;
	node0x162ed10:right -> node0x162ee10;
	node0x162eef0:left -> node0x162ed10;
	node0x162ec10:right -> node0x162eef0;
	node0x162e6b0:right -> node0x162ec10;
	node0x162efe0:left -> node0x162e6b0;
	node0x162f100 [color=red, label="<left> left | { OPERATOR | ; } | <right> right"];
	node0x162f000 [color=red, label="<left> left | { OPERATOR | ret } | <right> right"];
	node0x162f090 [color=green, label="<left> left | { IDENTIFIER | ans } | <right> right"];
	node0x162f000:left -> node0x162f090;
	node0x162f100:left -> node0x162f000;
	node0x162efe0:right -> node0x162f100;
	node0x162e640:right -> node0x162efe0;
	node0x162e1c0:right -> node0x162e640;
	node0x162e120:left -> node0x162e1c0;
	node0x162f1a0 [color=yellow, label="<left> left | { END | 0 } | <right> right"];
	node0x162e120:right -> node0x162f1a0;
	node0x162d2b0:right -> node0x162e120;
	node0x162c6b0:right -> node0x162d2b0;
}
