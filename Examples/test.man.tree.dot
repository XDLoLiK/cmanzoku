digraph tree {
	rankdir=HR;
	node [shape=record];
	node0x10c26b0 [color=red, label="<left> left | { OPERATOR | func } | <right> right"];
	node0x10c2740 [color=green, label="<left> left | { IDENTIFIER | main } | <right> right"];
	node0x10c2800 [color=red, label="<left> left | { OPERATOR | void } | <right> right"];
	node0x10c2740:left -> node0x10c2800;
	node0x10c2af0 [color=red, label="<left> left | { OPERATOR | ; } | <right> right"];
	node0x10c2910 [color=red, label="<left> left | { OPERATOR | var } | <right> right"];
	node0x10c2a10 [color=red, label="<left> left | { OPERATOR | = } | <right> right"];
	node0x10c29a0 [color=green, label="<left> left | { IDENTIFIER | num } | <right> right"];
	node0x10c2a10:left -> node0x10c29a0;
	node0x10c2a80 [color=blue, label="<left> left | { NUMBER | 500 } | <right> right"];
	node0x10c2a10:right -> node0x10c2a80;
	node0x10c2910:left -> node0x10c2a10;
	node0x10c2af0:left -> node0x10c2910;
	node0x10c2dc0 [color=red, label="<left> left | { OPERATOR | ; } | <right> right"];
	node0x10c2cc0 [color=red, label="<left> left | { OPERATOR | call } | <right> right"];
	node0x10c2b90 [color=green, label="<left> left | { IDENTIFIER | factorial_recursive } | <right> right"];
	node0x10c2cc0:left -> node0x10c2b90;
	node0x10c2ce0 [color=green, label="<left> left | { IDENTIFIER | num } | <right> right"];
	node0x10c2cc0:right -> node0x10c2ce0;
	node0x10c2dc0:left -> node0x10c2cc0;
	node0x10c3090 [color=red, label="<left> left | { OPERATOR | ; } | <right> right"];
	node0x10c2f90 [color=red, label="<left> left | { OPERATOR | call } | <right> right"];
	node0x10c2e60 [color=green, label="<left> left | { IDENTIFIER | factorial_iterative } | <right> right"];
	node0x10c2f90:left -> node0x10c2e60;
	node0x10c2fb0 [color=green, label="<left> left | { IDENTIFIER | num } | <right> right"];
	node0x10c2f90:right -> node0x10c2fb0;
	node0x10c3090:left -> node0x10c2f90;
	node0x10c31e0 [color=red, label="<left> left | { OPERATOR | ; } | <right> right"];
	node0x10c3100 [color=red, label="<left> left | { OPERATOR | ret } | <right> right"];
	node0x10c3170 [color=blue, label="<left> left | { NUMBER | 0 } | <right> right"];
	node0x10c3100:left -> node0x10c3170;
	node0x10c31e0:left -> node0x10c3100;
	node0x10c3090:right -> node0x10c31e0;
	node0x10c2dc0:right -> node0x10c3090;
	node0x10c2af0:right -> node0x10c2dc0;
	node0x10c2740:right -> node0x10c2af0;
	node0x10c26b0:left -> node0x10c2740;
	node0x10c32b0 [color=red, label="<left> left | { OPERATOR | func } | <right> right"];
	node0x10c3350 [color=green, label="<left> left | { IDENTIFIER | factorial_recursive } | <right> right"];
	node0x10c3430 [color=red, label="<left> left | { OPERATOR | var } | <right> right"];
	node0x10c34d0 [color=green, label="<left> left | { IDENTIFIER | num } | <right> right"];
	node0x10c3430:left -> node0x10c34d0;
	node0x10c3350:left -> node0x10c3430;
	node0x10c3ab0 [color=red, label="<left> left | { OPERATOR | ; } | <right> right"];
	node0x10c35f0 [color=red, label="<left> left | { OPERATOR | if } | <right> right"];
	node0x10c3740 [color=red, label="<left> left | { OPERATOR | \<= } | <right> right"];
	node0x10c36d0 [color=green, label="<left> left | { IDENTIFIER | num } | <right> right"];
	node0x10c3740:left -> node0x10c36d0;
	node0x10c37b0 [color=blue, label="<left> left | { NUMBER | 100 } | <right> right"];
	node0x10c3740:right -> node0x10c37b0;
	node0x10c35f0:left -> node0x10c3740;
	node0x10c39a0 [color=red, label="<left> left | { OPERATOR | ; } | <right> right"];
	node0x10c38c0 [color=red, label="<left> left | { OPERATOR | ret } | <right> right"];
	node0x10c3930 [color=blue, label="<left> left | { NUMBER | 100 } | <right> right"];
	node0x10c38c0:left -> node0x10c3930;
	node0x10c39a0:left -> node0x10c38c0;
	node0x10c35f0:right -> node0x10c39a0;
	node0x10c3ab0:left -> node0x10c35f0;
	node0x10c4050 [color=red, label="<left> left | { OPERATOR | ; } | <right> right"];
	node0x10c3ad0 [color=red, label="<left> left | { OPERATOR | ret } | <right> right"];
	node0x10c3c10 [color=red, label="<left> left | { OPERATOR | * } | <right> right"];
	node0x10c3b80 [color=green, label="<left> left | { IDENTIFIER | num } | <right> right"];
	node0x10c3c10:left -> node0x10c3b80;
	node0x10c3e10 [color=red, label="<left> left | { OPERATOR | call } | <right> right"];
	node0x10c3cc0 [color=green, label="<left> left | { IDENTIFIER | factorial_recursive } | <right> right"];
	node0x10c3e10:left -> node0x10c3cc0;
	node0x10c3ec0 [color=red, label="<left> left | { OPERATOR | - } | <right> right"];
	node0x10c3e30 [color=green, label="<left> left | { IDENTIFIER | num } | <right> right"];
	node0x10c3ec0:left -> node0x10c3e30;
	node0x10c3f50 [color=blue, label="<left> left | { NUMBER | 100 } | <right> right"];
	node0x10c3ec0:right -> node0x10c3f50;
	node0x10c3e10:right -> node0x10c3ec0;
	node0x10c3c10:right -> node0x10c3e10;
	node0x10c3ad0:left -> node0x10c3c10;
	node0x10c4050:left -> node0x10c3ad0;
	node0x10c3ab0:right -> node0x10c4050;
	node0x10c3350:right -> node0x10c3ab0;
	node0x10c32b0:left -> node0x10c3350;
	node0x10c4120 [color=red, label="<left> left | { OPERATOR | func } | <right> right"];
	node0x10c41c0 [color=green, label="<left> left | { IDENTIFIER | factorial_iterative } | <right> right"];
	node0x10c42a0 [color=red, label="<left> left | { OPERATOR | var } | <right> right"];
	node0x10c4340 [color=green, label="<left> left | { IDENTIFIER | num } | <right> right"];
	node0x10c42a0:left -> node0x10c4340;
	node0x10c41c0:left -> node0x10c42a0;
	node0x10c4640 [color=red, label="<left> left | { OPERATOR | ; } | <right> right"];
	node0x10c4460 [color=red, label="<left> left | { OPERATOR | var } | <right> right"];
	node0x10c4560 [color=red, label="<left> left | { OPERATOR | = } | <right> right"];
	node0x10c44f0 [color=green, label="<left> left | { IDENTIFIER | ans } | <right> right"];
	node0x10c4560:left -> node0x10c44f0;
	node0x10c45d0 [color=blue, label="<left> left | { NUMBER | 100 } | <right> right"];
	node0x10c4560:right -> node0x10c45d0;
	node0x10c4460:left -> node0x10c4560;
	node0x10c4640:left -> node0x10c4460;
	node0x10c4fe0 [color=red, label="<left> left | { OPERATOR | ; } | <right> right"];
	node0x10c46b0 [color=red, label="<left> left | { OPERATOR | while } | <right> right"];
	node0x10c4800 [color=red, label="<left> left | { OPERATOR | \> } | <right> right"];
	node0x10c4790 [color=green, label="<left> left | { IDENTIFIER | num } | <right> right"];
	node0x10c4800:left -> node0x10c4790;
	node0x10c4870 [color=blue, label="<left> left | { NUMBER | 100 } | <right> right"];
	node0x10c4800:right -> node0x10c4870;
	node0x10c46b0:left -> node0x10c4800;
	node0x10c4c10 [color=red, label="<left> left | { OPERATOR | ; } | <right> right"];
	node0x10c4a10 [color=red, label="<left> left | { OPERATOR | = } | <right> right"];
	node0x10c49a0 [color=green, label="<left> left | { IDENTIFIER | ans } | <right> right"];
	node0x10c4a10:left -> node0x10c49a0;
	node0x10c4b10 [color=red, label="<left> left | { OPERATOR | * } | <right> right"];
	node0x10c4aa0 [color=green, label="<left> left | { IDENTIFIER | ans } | <right> right"];
	node0x10c4b10:left -> node0x10c4aa0;
	node0x10c4ba0 [color=green, label="<left> left | { IDENTIFIER | num } | <right> right"];
	node0x10c4b10:right -> node0x10c4ba0;
	node0x10c4a10:right -> node0x10c4b10;
	node0x10c4c10:left -> node0x10c4a10;
	node0x10c4ef0 [color=red, label="<left> left | { OPERATOR | ; } | <right> right"];
	node0x10c4d10 [color=red, label="<left> left | { OPERATOR | = } | <right> right"];
	node0x10c4ca0 [color=green, label="<left> left | { IDENTIFIER | num } | <right> right"];
	node0x10c4d10:left -> node0x10c4ca0;
	node0x10c4e10 [color=red, label="<left> left | { OPERATOR | - } | <right> right"];
	node0x10c4da0 [color=green, label="<left> left | { IDENTIFIER | num } | <right> right"];
	node0x10c4e10:left -> node0x10c4da0;
	node0x10c4e80 [color=blue, label="<left> left | { NUMBER | 100 } | <right> right"];
	node0x10c4e10:right -> node0x10c4e80;
	node0x10c4d10:right -> node0x10c4e10;
	node0x10c4ef0:left -> node0x10c4d10;
	node0x10c4c10:right -> node0x10c4ef0;
	node0x10c46b0:right -> node0x10c4c10;
	node0x10c4fe0:left -> node0x10c46b0;
	node0x10c5100 [color=red, label="<left> left | { OPERATOR | ; } | <right> right"];
	node0x10c5000 [color=red, label="<left> left | { OPERATOR | ret } | <right> right"];
	node0x10c5090 [color=green, label="<left> left | { IDENTIFIER | ans } | <right> right"];
	node0x10c5000:left -> node0x10c5090;
	node0x10c5100:left -> node0x10c5000;
	node0x10c4fe0:right -> node0x10c5100;
	node0x10c4640:right -> node0x10c4fe0;
	node0x10c41c0:right -> node0x10c4640;
	node0x10c4120:left -> node0x10c41c0;
	node0x10c51a0 [color=yellow, label="<left> left | { END | 0 } | <right> right"];
	node0x10c4120:right -> node0x10c51a0;
	node0x10c32b0:right -> node0x10c4120;
	node0x10c26b0:right -> node0x10c32b0;
}
