digraph tree {
	rankdir=HR;
	node [shape=record];
	node0x11996b0 [color=red, label="<left> left | { OPERATOR | func } | <right> right"];
	node0x1199740 [color=green, label="<left> left | { IDENTIFIER | main } | <right> right"];
	node0x1199800 [color=red, label="<left> left | { OPERATOR | void } | <right> right"];
	node0x1199740:left -> node0x1199800;
	node0x1199af0 [color=red, label="<left> left | { OPERATOR | ; } | <right> right"];
	node0x1199910 [color=red, label="<left> left | { OPERATOR | var } | <right> right"];
	node0x1199a10 [color=red, label="<left> left | { OPERATOR | = } | <right> right"];
	node0x11999a0 [color=green, label="<left> left | { IDENTIFIER | num } | <right> right"];
	node0x1199a10:left -> node0x11999a0;
	node0x1199a80 [color=blue, label="<left> left | { NUMBER | 500 } | <right> right"];
	node0x1199a10:right -> node0x1199a80;
	node0x1199910:left -> node0x1199a10;
	node0x1199af0:left -> node0x1199910;
	node0x1199dc0 [color=red, label="<left> left | { OPERATOR | ; } | <right> right"];
	node0x1199cc0 [color=red, label="<left> left | { OPERATOR | call } | <right> right"];
	node0x1199b90 [color=green, label="<left> left | { IDENTIFIER | factorial_recursive } | <right> right"];
	node0x1199cc0:left -> node0x1199b90;
	node0x1199ce0 [color=green, label="<left> left | { IDENTIFIER | num } | <right> right"];
	node0x1199cc0:right -> node0x1199ce0;
	node0x1199dc0:left -> node0x1199cc0;
	node0x119a090 [color=red, label="<left> left | { OPERATOR | ; } | <right> right"];
	node0x1199f90 [color=red, label="<left> left | { OPERATOR | call } | <right> right"];
	node0x1199e60 [color=green, label="<left> left | { IDENTIFIER | factorial_iterative } | <right> right"];
	node0x1199f90:left -> node0x1199e60;
	node0x1199fb0 [color=green, label="<left> left | { IDENTIFIER | num } | <right> right"];
	node0x1199f90:right -> node0x1199fb0;
	node0x119a090:left -> node0x1199f90;
	node0x119a1e0 [color=red, label="<left> left | { OPERATOR | ; } | <right> right"];
	node0x119a100 [color=red, label="<left> left | { OPERATOR | ret } | <right> right"];
	node0x119a170 [color=blue, label="<left> left | { NUMBER | 0 } | <right> right"];
	node0x119a100:left -> node0x119a170;
	node0x119a1e0:left -> node0x119a100;
	node0x119a090:right -> node0x119a1e0;
	node0x1199dc0:right -> node0x119a090;
	node0x1199af0:right -> node0x1199dc0;
	node0x1199740:right -> node0x1199af0;
	node0x11996b0:left -> node0x1199740;
	node0x119a2b0 [color=red, label="<left> left | { OPERATOR | func } | <right> right"];
	node0x119a350 [color=green, label="<left> left | { IDENTIFIER | factorial_recursive } | <right> right"];
	node0x119a430 [color=red, label="<left> left | { OPERATOR | var } | <right> right"];
	node0x119a4d0 [color=green, label="<left> left | { IDENTIFIER | num } | <right> right"];
	node0x119a430:left -> node0x119a4d0;
	node0x119a350:left -> node0x119a430;
	node0x119aab0 [color=red, label="<left> left | { OPERATOR | ; } | <right> right"];
	node0x119a5f0 [color=red, label="<left> left | { OPERATOR | if } | <right> right"];
	node0x119a740 [color=red, label="<left> left | { OPERATOR | \<= } | <right> right"];
	node0x119a6d0 [color=green, label="<left> left | { IDENTIFIER | num } | <right> right"];
	node0x119a740:left -> node0x119a6d0;
	node0x119a7b0 [color=blue, label="<left> left | { NUMBER | 100 } | <right> right"];
	node0x119a740:right -> node0x119a7b0;
	node0x119a5f0:left -> node0x119a740;
	node0x119a9a0 [color=red, label="<left> left | { OPERATOR | ; } | <right> right"];
	node0x119a8c0 [color=red, label="<left> left | { OPERATOR | ret } | <right> right"];
	node0x119a930 [color=blue, label="<left> left | { NUMBER | 100 } | <right> right"];
	node0x119a8c0:left -> node0x119a930;
	node0x119a9a0:left -> node0x119a8c0;
	node0x119a5f0:right -> node0x119a9a0;
	node0x119aab0:left -> node0x119a5f0;
	node0x119b050 [color=red, label="<left> left | { OPERATOR | ; } | <right> right"];
	node0x119aad0 [color=red, label="<left> left | { OPERATOR | ret } | <right> right"];
	node0x119ac10 [color=red, label="<left> left | { OPERATOR | * } | <right> right"];
	node0x119ab80 [color=green, label="<left> left | { IDENTIFIER | num } | <right> right"];
	node0x119ac10:left -> node0x119ab80;
	node0x119ae10 [color=red, label="<left> left | { OPERATOR | call } | <right> right"];
	node0x119acc0 [color=green, label="<left> left | { IDENTIFIER | factorial_recursive } | <right> right"];
	node0x119ae10:left -> node0x119acc0;
	node0x119aec0 [color=red, label="<left> left | { OPERATOR | - } | <right> right"];
	node0x119ae30 [color=green, label="<left> left | { IDENTIFIER | num } | <right> right"];
	node0x119aec0:left -> node0x119ae30;
	node0x119af50 [color=blue, label="<left> left | { NUMBER | 100 } | <right> right"];
	node0x119aec0:right -> node0x119af50;
	node0x119ae10:right -> node0x119aec0;
	node0x119ac10:right -> node0x119ae10;
	node0x119aad0:left -> node0x119ac10;
	node0x119b050:left -> node0x119aad0;
	node0x119aab0:right -> node0x119b050;
	node0x119a350:right -> node0x119aab0;
	node0x119a2b0:left -> node0x119a350;
	node0x119b120 [color=red, label="<left> left | { OPERATOR | func } | <right> right"];
	node0x119b1c0 [color=green, label="<left> left | { IDENTIFIER | factorial_iterative } | <right> right"];
	node0x119b2a0 [color=red, label="<left> left | { OPERATOR | var } | <right> right"];
	node0x119b340 [color=green, label="<left> left | { IDENTIFIER | num } | <right> right"];
	node0x119b2a0:left -> node0x119b340;
	node0x119b1c0:left -> node0x119b2a0;
	node0x119b640 [color=red, label="<left> left | { OPERATOR | ; } | <right> right"];
	node0x119b460 [color=red, label="<left> left | { OPERATOR | var } | <right> right"];
	node0x119b560 [color=red, label="<left> left | { OPERATOR | = } | <right> right"];
	node0x119b4f0 [color=green, label="<left> left | { IDENTIFIER | ans } | <right> right"];
	node0x119b560:left -> node0x119b4f0;
	node0x119b5d0 [color=blue, label="<left> left | { NUMBER | 100 } | <right> right"];
	node0x119b560:right -> node0x119b5d0;
	node0x119b460:left -> node0x119b560;
	node0x119b640:left -> node0x119b460;
	node0x119bfe0 [color=red, label="<left> left | { OPERATOR | ; } | <right> right"];
	node0x119b6b0 [color=red, label="<left> left | { OPERATOR | while } | <right> right"];
	node0x119b800 [color=red, label="<left> left | { OPERATOR | \> } | <right> right"];
	node0x119b790 [color=green, label="<left> left | { IDENTIFIER | num } | <right> right"];
	node0x119b800:left -> node0x119b790;
	node0x119b870 [color=blue, label="<left> left | { NUMBER | 100 } | <right> right"];
	node0x119b800:right -> node0x119b870;
	node0x119b6b0:left -> node0x119b800;
	node0x119bc10 [color=red, label="<left> left | { OPERATOR | ; } | <right> right"];
	node0x119ba10 [color=red, label="<left> left | { OPERATOR | = } | <right> right"];
	node0x119b9a0 [color=green, label="<left> left | { IDENTIFIER | ans } | <right> right"];
	node0x119ba10:left -> node0x119b9a0;
	node0x119bb10 [color=red, label="<left> left | { OPERATOR | * } | <right> right"];
	node0x119baa0 [color=green, label="<left> left | { IDENTIFIER | ans } | <right> right"];
	node0x119bb10:left -> node0x119baa0;
	node0x119bba0 [color=green, label="<left> left | { IDENTIFIER | num } | <right> right"];
	node0x119bb10:right -> node0x119bba0;
	node0x119ba10:right -> node0x119bb10;
	node0x119bc10:left -> node0x119ba10;
	node0x119bef0 [color=red, label="<left> left | { OPERATOR | ; } | <right> right"];
	node0x119bd10 [color=red, label="<left> left | { OPERATOR | = } | <right> right"];
	node0x119bca0 [color=green, label="<left> left | { IDENTIFIER | num } | <right> right"];
	node0x119bd10:left -> node0x119bca0;
	node0x119be10 [color=red, label="<left> left | { OPERATOR | - } | <right> right"];
	node0x119bda0 [color=green, label="<left> left | { IDENTIFIER | num } | <right> right"];
	node0x119be10:left -> node0x119bda0;
	node0x119be80 [color=blue, label="<left> left | { NUMBER | 100 } | <right> right"];
	node0x119be10:right -> node0x119be80;
	node0x119bd10:right -> node0x119be10;
	node0x119bef0:left -> node0x119bd10;
	node0x119bc10:right -> node0x119bef0;
	node0x119b6b0:right -> node0x119bc10;
	node0x119bfe0:left -> node0x119b6b0;
	node0x119c100 [color=red, label="<left> left | { OPERATOR | ; } | <right> right"];
	node0x119c000 [color=red, label="<left> left | { OPERATOR | ret } | <right> right"];
	node0x119c090 [color=green, label="<left> left | { IDENTIFIER | ans } | <right> right"];
	node0x119c000:left -> node0x119c090;
	node0x119c100:left -> node0x119c000;
	node0x119bfe0:right -> node0x119c100;
	node0x119b640:right -> node0x119bfe0;
	node0x119b1c0:right -> node0x119b640;
	node0x119b120:left -> node0x119b1c0;
	node0x119c1a0 [color=yellow, label="<left> left | { END | 0 } | <right> right"];
	node0x119b120:right -> node0x119c1a0;
	node0x119a2b0:right -> node0x119b120;
	node0x11996b0:right -> node0x119a2b0;
}
