digraph tree {
	rankdir=HR;
	node [shape=record];
	node0xe28700 [color=red, label="<left> left | { OPERATOR | func } | <right> right"];
	node0xe287c0 [color=green, label="<left> left | { IDENTIFIER | main } | <right> right"];
	node0xe288e0 [color=red, label="<left> left | { OPERATOR | void } | <right> right"];
	node0xe287c0:left -> node0xe288e0;
	node0xe28d20 [color=red, label="<left> left | { OPERATOR | ; } | <right> right"];
	node0xe28a80 [color=red, label="<left> left | { OPERATOR | var } | <right> right"];
	node0xe28be0 [color=red, label="<left> left | { OPERATOR | = } | <right> right"];
	node0xe28b40 [color=green, label="<left> left | { IDENTIFIER | num } | <right> right"];
	node0xe28be0:left -> node0xe28b40;
	node0xe28c80 [color=blue, label="<left> left | { NUMBER | 5.0 } | <right> right"];
	node0xe28be0:right -> node0xe28c80;
	node0xe28a80:left -> node0xe28be0;
	node0xe28d20:left -> node0xe28a80;
	node0xe290f0 [color=red, label="<left> left | { OPERATOR | ; } | <right> right"];
	node0xe28f90 [color=red, label="<left> left | { OPERATOR | call } | <right> right"];
	node0xe28df0 [color=green, label="<left> left | { IDENTIFIER | factorial_recursive } | <right> right"];
	node0xe28f90:left -> node0xe28df0;
	node0xe28fb0 [color=green, label="<left> left | { IDENTIFIER | num } | <right> right"];
	node0xe28f90:right -> node0xe28fb0;
	node0xe290f0:left -> node0xe28f90;
	node0xe294c0 [color=red, label="<left> left | { OPERATOR | ; } | <right> right"];
	node0xe29360 [color=red, label="<left> left | { OPERATOR | call } | <right> right"];
	node0xe291c0 [color=green, label="<left> left | { IDENTIFIER | factorial_iterative } | <right> right"];
	node0xe29360:left -> node0xe291c0;
	node0xe29380 [color=green, label="<left> left | { IDENTIFIER | num } | <right> right"];
	node0xe29360:right -> node0xe29380;
	node0xe294c0:left -> node0xe29360;
	node0xe296a0 [color=red, label="<left> left | { OPERATOR | ; } | <right> right"];
	node0xe29560 [color=red, label="<left> left | { OPERATOR | ret } | <right> right"];
	node0xe29600 [color=blue, label="<left> left | { NUMBER | 0.0 } | <right> right"];
	node0xe29560:left -> node0xe29600;
	node0xe296a0:left -> node0xe29560;
	node0xe294c0:right -> node0xe296a0;
	node0xe290f0:right -> node0xe294c0;
	node0xe28d20:right -> node0xe290f0;
	node0xe287c0:right -> node0xe28d20;
	node0xe28700:left -> node0xe287c0;
	node0xe297d0 [color=red, label="<left> left | { OPERATOR | func } | <right> right"];
	node0xe298a0 [color=green, label="<left> left | { IDENTIFIER | factorial_recursive } | <right> right"];
	node0xe299e0 [color=red, label="<left> left | { OPERATOR | var } | <right> right"];
	node0xe29ab0 [color=green, label="<left> left | { IDENTIFIER | num } | <right> right"];
	node0xe299e0:left -> node0xe29ab0;
	node0xe298a0:left -> node0xe299e0;
	node0xe2a340 [color=red, label="<left> left | { OPERATOR | ; } | <right> right"];
	node0xe29c60 [color=red, label="<left> left | { OPERATOR | if } | <right> right"];
	node0xe29e40 [color=red, label="<left> left | { OPERATOR | \<= } | <right> right"];
	node0xe29da0 [color=green, label="<left> left | { IDENTIFIER | num } | <right> right"];
	node0xe29e40:left -> node0xe29da0;
	node0xe29ee0 [color=blue, label="<left> left | { NUMBER | 1.0 } | <right> right"];
	node0xe29e40:right -> node0xe29ee0;
	node0xe29c60:left -> node0xe29e40;
	node0xe2a1c0 [color=red, label="<left> left | { OPERATOR | ; } | <right> right"];
	node0xe2a080 [color=red, label="<left> left | { OPERATOR | ret } | <right> right"];
	node0xe2a120 [color=blue, label="<left> left | { NUMBER | 1.0 } | <right> right"];
	node0xe2a080:left -> node0xe2a120;
	node0xe2a1c0:left -> node0xe2a080;
	node0xe29c60:right -> node0xe2a1c0;
	node0xe2a340:left -> node0xe29c60;
	node0xe2aaa0 [color=red, label="<left> left | { OPERATOR | ; } | <right> right"];
	node0xe2a360 [color=red, label="<left> left | { OPERATOR | ret } | <right> right"];
	node0xe2a500 [color=red, label="<left> left | { OPERATOR | * } | <right> right"];
	node0xe2a440 [color=green, label="<left> left | { IDENTIFIER | num } | <right> right"];
	node0xe2a500:left -> node0xe2a440;
	node0xe2a7a0 [color=red, label="<left> left | { OPERATOR | call } | <right> right"];
	node0xe2a5e0 [color=green, label="<left> left | { IDENTIFIER | factorial_recursive } | <right> right"];
	node0xe2a7a0:left -> node0xe2a5e0;
	node0xe2a880 [color=red, label="<left> left | { OPERATOR | - } | <right> right"];
	node0xe2a7c0 [color=green, label="<left> left | { IDENTIFIER | num } | <right> right"];
	node0xe2a880:left -> node0xe2a7c0;
	node0xe2a940 [color=blue, label="<left> left | { NUMBER | 1.0 } | <right> right"];
	node0xe2a880:right -> node0xe2a940;
	node0xe2a7a0:right -> node0xe2a880;
	node0xe2a500:right -> node0xe2a7a0;
	node0xe2a360:left -> node0xe2a500;
	node0xe2aaa0:left -> node0xe2a360;
	node0xe2a340:right -> node0xe2aaa0;
	node0xe298a0:right -> node0xe2a340;
	node0xe297d0:left -> node0xe298a0;
	node0xe2abd0 [color=red, label="<left> left | { OPERATOR | func } | <right> right"];
	node0xe2aca0 [color=green, label="<left> left | { IDENTIFIER | factorial_iterative } | <right> right"];
	node0xe2ade0 [color=red, label="<left> left | { OPERATOR | var } | <right> right"];
	node0xe2aeb0 [color=green, label="<left> left | { IDENTIFIER | num } | <right> right"];
	node0xe2ade0:left -> node0xe2aeb0;
	node0xe2aca0:left -> node0xe2ade0;
	node0xe2b300 [color=red, label="<left> left | { OPERATOR | ; } | <right> right"];
	node0xe2b060 [color=red, label="<left> left | { OPERATOR | var } | <right> right"];
	node0xe2b1c0 [color=red, label="<left> left | { OPERATOR | = } | <right> right"];
	node0xe2b120 [color=green, label="<left> left | { IDENTIFIER | ans } | <right> right"];
	node0xe2b1c0:left -> node0xe2b120;
	node0xe2b260 [color=blue, label="<left> left | { NUMBER | 1.0 } | <right> right"];
	node0xe2b1c0:right -> node0xe2b260;
	node0xe2b060:left -> node0xe2b1c0;
	node0xe2b300:left -> node0xe2b060;
	node0xe2bde0 [color=red, label="<left> left | { OPERATOR | ; } | <right> right"];
	node0xe2b3a0 [color=red, label="<left> left | { OPERATOR | while } | <right> right"];
	node0xe2b580 [color=red, label="<left> left | { OPERATOR | \> } | <right> right"];
	node0xe2b4e0 [color=green, label="<left> left | { IDENTIFIER | num } | <right> right"];
	node0xe2b580:left -> node0xe2b4e0;
	node0xe2b620 [color=blue, label="<left> left | { NUMBER | 1.0 } | <right> right"];
	node0xe2b580:right -> node0xe2b620;
	node0xe2b3a0:left -> node0xe2b580;
	node0xe2b9e0 [color=red, label="<left> left | { OPERATOR | ; } | <right> right"];
	node0xe2b880 [color=red, label="<left> left | { OPERATOR | *= } | <right> right"];
	node0xe2b7e0 [color=green, label="<left> left | { IDENTIFIER | ans } | <right> right"];
	node0xe2b880:left -> node0xe2b7e0;
	node0xe2b940 [color=green, label="<left> left | { IDENTIFIER | num } | <right> right"];
	node0xe2b880:right -> node0xe2b940;
	node0xe2b9e0:left -> node0xe2b880;
	node0xe2bc80 [color=red, label="<left> left | { OPERATOR | ; } | <right> right"];
	node0xe2bb40 [color=red, label="<left> left | { OPERATOR | -= } | <right> right"];
	node0xe2baa0 [color=green, label="<left> left | { IDENTIFIER | num } | <right> right"];
	node0xe2bb40:left -> node0xe2baa0;
	node0xe2bbe0 [color=blue, label="<left> left | { NUMBER | 1.0 } | <right> right"];
	node0xe2bb40:right -> node0xe2bbe0;
	node0xe2bc80:left -> node0xe2bb40;
	node0xe2b9e0:right -> node0xe2bc80;
	node0xe2b3a0:right -> node0xe2b9e0;
	node0xe2bde0:left -> node0xe2b3a0;
	node0xe2bf60 [color=red, label="<left> left | { OPERATOR | ; } | <right> right"];
	node0xe2be00 [color=red, label="<left> left | { OPERATOR | ret } | <right> right"];
	node0xe2bec0 [color=green, label="<left> left | { IDENTIFIER | ans } | <right> right"];
	node0xe2be00:left -> node0xe2bec0;
	node0xe2bf60:left -> node0xe2be00;
	node0xe2bde0:right -> node0xe2bf60;
	node0xe2b300:right -> node0xe2bde0;
	node0xe2aca0:right -> node0xe2b300;
	node0xe2abd0:left -> node0xe2aca0;
	node0xe2c040 [color=yellow, label="<left> left | { END | 0 } | <right> right"];
	node0xe2abd0:right -> node0xe2c040;
	node0xe297d0:right -> node0xe2abd0;
	node0xe28700:right -> node0xe297d0;
}
