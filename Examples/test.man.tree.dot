digraph tree {
	rankdir=HR;
	node [shape=record];
	node0x4a985d0 [color=red, label="<left> left | { OPERATOR | func } | <right> right"];
	node0x4a98740 [color=green, label="<left> left | { IDENTIFIER | main } | <right> right"];
	node0x4a98920 [color=red, label="<left> left | { OPERATOR | void } | <right> right"];
	node0x4a98740:left -> node0x4a98920;
	node0x4a99090 [color=red, label="<left> left | { OPERATOR | ; } | <right> right"];
	node0x4a98bc0 [color=red, label="<left> left | { OPERATOR | var } | <right> right"];
	node0x4a98e50 [color=red, label="<left> left | { OPERATOR | = } | <right> right"];
	node0x4a98d30 [color=green, label="<left> left | { IDENTIFIER | num } | <right> right"];
	node0x4a98e50:left -> node0x4a98d30;
	node0x4a98f70 [color=blue, label="<left> left | { NUMBER | 500 } | <right> right"];
	node0x4a98e50:right -> node0x4a98f70;
	node0x4a98bc0:left -> node0x4a98e50;
	node0x4a99090:left -> node0x4a98bc0;
	node0x4a99740 [color=red, label="<left> left | { OPERATOR | ; } | <right> right"];
	node0x4a994e0 [color=red, label="<left> left | { OPERATOR | call } | <right> right"];
	node0x4a99220 [color=green, label="<left> left | { IDENTIFIER | factorial_recursive } | <right> right"];
	node0x4a994e0:left -> node0x4a99220;
	node0x4a99540 [color=green, label="<left> left | { IDENTIFIER | num } | <right> right"];
	node0x4a994e0:right -> node0x4a99540;
	node0x4a99740:left -> node0x4a994e0;
	node0x4a99df0 [color=red, label="<left> left | { OPERATOR | ; } | <right> right"];
	node0x4a99b90 [color=red, label="<left> left | { OPERATOR | call } | <right> right"];
	node0x4a998d0 [color=green, label="<left> left | { IDENTIFIER | factorial_iterative } | <right> right"];
	node0x4a99b90:left -> node0x4a998d0;
	node0x4a99bf0 [color=green, label="<left> left | { IDENTIFIER | num } | <right> right"];
	node0x4a99b90:right -> node0x4a99bf0;
	node0x4a99df0:left -> node0x4a99b90;
	node0x4a9a150 [color=red, label="<left> left | { OPERATOR | ; } | <right> right"];
	node0x4a99f10 [color=red, label="<left> left | { OPERATOR | ret } | <right> right"];
	node0x4a9a030 [color=blue, label="<left> left | { NUMBER | 0 } | <right> right"];
	node0x4a99f10:left -> node0x4a9a030;
	node0x4a9a150:left -> node0x4a99f10;
	node0x4a99df0:right -> node0x4a9a150;
	node0x4a99740:right -> node0x4a99df0;
	node0x4a99090:right -> node0x4a99740;
	node0x4a98740:right -> node0x4a99090;
	node0x4a985d0:left -> node0x4a98740;
	node0x4a9a350 [color=red, label="<left> left | { OPERATOR | func } | <right> right"];
	node0x4a9a4f0 [color=green, label="<left> left | { IDENTIFIER | factorial_recursive } | <right> right"];
	node0x4a9a710 [color=red, label="<left> left | { OPERATOR | var } | <right> right"];
	node0x4a9a8a0 [color=green, label="<left> left | { IDENTIFIER | num } | <right> right"];
	node0x4a9a710:left -> node0x4a9a8a0;
	node0x4a9a4f0:left -> node0x4a9a710;
	node0x4a9b790 [color=red, label="<left> left | { OPERATOR | ; } | <right> right"];
	node0x4a9ab70 [color=red, label="<left> left | { OPERATOR | if } | <right> right"];
	node0x4a9aef0 [color=red, label="<left> left | { OPERATOR | \<= } | <right> right"];
	node0x4a9adc0 [color=green, label="<left> left | { IDENTIFIER | num } | <right> right"];
	node0x4a9aef0:left -> node0x4a9adc0;
	node0x4a9b020 [color=blue, label="<left> left | { NUMBER | 100 } | <right> right"];
	node0x4a9aef0:right -> node0x4a9b020;
	node0x4a9ab70:left -> node0x4a9aef0;
	node0x4a9b520 [color=red, label="<left> left | { OPERATOR | ; } | <right> right"];
	node0x4a9b2e0 [color=red, label="<left> left | { OPERATOR | ret } | <right> right"];
	node0x4a9b400 [color=blue, label="<left> left | { NUMBER | 100 } | <right> right"];
	node0x4a9b2e0:left -> node0x4a9b400;
	node0x4a9b520:left -> node0x4a9b2e0;
	node0x4a9ab70:right -> node0x4a9b520;
	node0x4a9b790:left -> node0x4a9ab70;
	node0x4a9c440 [color=red, label="<left> left | { OPERATOR | ; } | <right> right"];
	node0x4a9b7f0 [color=red, label="<left> left | { OPERATOR | ret } | <right> right"];
	node0x4a9bac0 [color=red, label="<left> left | { OPERATOR | * } | <right> right"];
	node0x4a9b980 [color=green, label="<left> left | { IDENTIFIER | num } | <right> right"];
	node0x4a9bac0:left -> node0x4a9b980;
	node0x4a9bf40 [color=red, label="<left> left | { OPERATOR | call } | <right> right"];
	node0x4a9bc60 [color=green, label="<left> left | { IDENTIFIER | factorial_recursive } | <right> right"];
	node0x4a9bf40:left -> node0x4a9bc60;
	node0x4a9c0e0 [color=red, label="<left> left | { OPERATOR | - } | <right> right"];
	node0x4a9bfa0 [color=green, label="<left> left | { IDENTIFIER | num } | <right> right"];
	node0x4a9c0e0:left -> node0x4a9bfa0;
	node0x4a9c220 [color=blue, label="<left> left | { NUMBER | 100 } | <right> right"];
	node0x4a9c0e0:right -> node0x4a9c220;
	node0x4a9bf40:right -> node0x4a9c0e0;
	node0x4a9bac0:right -> node0x4a9bf40;
	node0x4a9b7f0:left -> node0x4a9bac0;
	node0x4a9c440:left -> node0x4a9b7f0;
	node0x4a9b790:right -> node0x4a9c440;
	node0x4a9a4f0:right -> node0x4a9b790;
	node0x4a9a350:left -> node0x4a9a4f0;
	node0x4a9c640 [color=red, label="<left> left | { OPERATOR | func } | <right> right"];
	node0x4a9c7e0 [color=green, label="<left> left | { IDENTIFIER | factorial_iterative } | <right> right"];
	node0x4a9ca00 [color=red, label="<left> left | { OPERATOR | var } | <right> right"];
	node0x4a9cb90 [color=green, label="<left> left | { IDENTIFIER | num } | <right> right"];
	node0x4a9ca00:left -> node0x4a9cb90;
	node0x4a9c7e0:left -> node0x4a9ca00;
	node0x4a9d320 [color=red, label="<left> left | { OPERATOR | ; } | <right> right"];
	node0x4a9ce50 [color=red, label="<left> left | { OPERATOR | var } | <right> right"];
	node0x4a9d0e0 [color=red, label="<left> left | { OPERATOR | = } | <right> right"];
	node0x4a9cfc0 [color=green, label="<left> left | { IDENTIFIER | ans } | <right> right"];
	node0x4a9d0e0:left -> node0x4a9cfc0;
	node0x4a9d200 [color=blue, label="<left> left | { NUMBER | 100 } | <right> right"];
	node0x4a9d0e0:right -> node0x4a9d200;
	node0x4a9ce50:left -> node0x4a9d0e0;
	node0x4a9d320:left -> node0x4a9ce50;
	node0x4a9ecc0 [color=red, label="<left> left | { OPERATOR | ; } | <right> right"];
	node0x4a9d450 [color=red, label="<left> left | { OPERATOR | while } | <right> right"];
	node0x4a9d7d0 [color=red, label="<left> left | { OPERATOR | \> } | <right> right"];
	node0x4a9d6a0 [color=green, label="<left> left | { IDENTIFIER | num } | <right> right"];
	node0x4a9d7d0:left -> node0x4a9d6a0;
	node0x4a9d900 [color=blue, label="<left> left | { NUMBER | 100 } | <right> right"];
	node0x4a9d7d0:right -> node0x4a9d900;
	node0x4a9d450:left -> node0x4a9d7d0;
	node0x4a9e2b0 [color=red, label="<left> left | { OPERATOR | ; } | <right> right"];
	node0x4a9dd50 [color=red, label="<left> left | { OPERATOR | = } | <right> right"];
	node0x4a9dc20 [color=green, label="<left> left | { IDENTIFIER | ans } | <right> right"];
	node0x4a9dd50:left -> node0x4a9dc20;
	node0x4a9e000 [color=red, label="<left> left | { OPERATOR | * } | <right> right"];
	node0x4a9ded0 [color=green, label="<left> left | { IDENTIFIER | ans } | <right> right"];
	node0x4a9e000:left -> node0x4a9ded0;
	node0x4a9e180 [color=green, label="<left> left | { IDENTIFIER | num } | <right> right"];
	node0x4a9e000:right -> node0x4a9e180;
	node0x4a9dd50:right -> node0x4a9e000;
	node0x4a9e2b0:left -> node0x4a9dd50;
	node0x4a9ea70 [color=red, label="<left> left | { OPERATOR | ; } | <right> right"];
	node0x4a9e560 [color=red, label="<left> left | { OPERATOR | = } | <right> right"];
	node0x4a9e430 [color=green, label="<left> left | { IDENTIFIER | num } | <right> right"];
	node0x4a9e560:left -> node0x4a9e430;
	node0x4a9e810 [color=red, label="<left> left | { OPERATOR | - } | <right> right"];
	node0x4a9e6e0 [color=green, label="<left> left | { IDENTIFIER | num } | <right> right"];
	node0x4a9e810:left -> node0x4a9e6e0;
	node0x4a9e940 [color=blue, label="<left> left | { NUMBER | 100 } | <right> right"];
	node0x4a9e810:right -> node0x4a9e940;
	node0x4a9e560:right -> node0x4a9e810;
	node0x4a9ea70:left -> node0x4a9e560;
	node0x4a9e2b0:right -> node0x4a9ea70;
	node0x4a9d450:right -> node0x4a9e2b0;
	node0x4a9ecc0:left -> node0x4a9d450;
	node0x4a9efb0 [color=red, label="<left> left | { OPERATOR | ; } | <right> right"];
	node0x4a9ed20 [color=red, label="<left> left | { OPERATOR | ret } | <right> right"];
	node0x4a9ee90 [color=green, label="<left> left | { IDENTIFIER | ans } | <right> right"];
	node0x4a9ed20:left -> node0x4a9ee90;
	node0x4a9efb0:left -> node0x4a9ed20;
	node0x4a9ecc0:right -> node0x4a9efb0;
	node0x4a9d320:right -> node0x4a9ecc0;
	node0x4a9c7e0:right -> node0x4a9d320;
	node0x4a9c640:left -> node0x4a9c7e0;
	node0x4a9f140 [color=yellow, label="<left> left | { END | 0 } | <right> right"];
	node0x4a9c640:right -> node0x4a9f140;
	node0x4a9a350:right -> node0x4a9c640;
	node0x4a985d0:right -> node0x4a9a350;
}
